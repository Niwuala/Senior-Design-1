#ifndef UNIT_TEST
#include <Arduino.h>
#endif
#include <IRrecv.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>
#include <IRtimer.h>
#include <IRutils.h>
#include <ir_Argo.h>
#include <ir_Coolix.h>
#include <ir_Daikin.h>
#include <ir_Fujitsu.h>
#include <ir_Gree.h>
#include <ir_Haier.h>
#include <ir_Hitachi.h>
#include <ir_Kelvinator.h>
#include <ir_LG.h>
#include <ir_Magiquest.h>
#include <ir_Midea.h>
#include <ir_Mitsubishi.h>
#include <ir_NEC.h>
#include <ir_Panasonic.h>
#include <ir_Samsung.h>
#include <ir_Toshiba.h>
#include <ir_Trotec.h>
#include <ir_Vestel.h>
#include <ir_Whirlpool.h>

#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>



const int LEDPIN = 12;
const char* ssid = "Hawk Wireless";
const char* password = "hawk4life";

IRsend mysend(LEDPIN);

String oldpayload;
      int New = 0;
      
void setup () {
 pinMode(LEDPIN,OUTPUT);
 Serial.begin(115200);
   WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
 
    delay(1000);
    Serial.println("Connecting..");
 
  }

}
 
void loop() {
if (WiFi.status() == WL_CONNECTED) { //Check WiFi connection status
    HTTPClient http;  //Declare an object of class HTTPClient
     
    http.begin("http://api.thingspeak.com/channels/623052/fields/1/last.txt");  //Specify request destination
    int httpCode = http.GET();                                                 //Send the request
             
    //if (httpCode = 200) { //Check the returning code

      String payload = http.getString();   //Get the request response payload
      Serial.println(payload);                     //Print the response payload
      
 conditions: if (payload == "4" || payload == "16" || payload == "21" || payload == "23" || payload == "35" || payload == "35.2" || payload == "36" || payload == "47" || payload == "56" || payload == "56.2" || payload == "63" || payload == "100" || payload == "101" || payload == "102" || payload == "103" || payload == "104" || payload == "105" || payload == "106" || payload == "107" || payload == "108" || payload == "109" || payload == "110" || payload == "111" || payload == "112" || payload == "113" || payload == "114" || payload == "115") {

  if (payload == "4" && New == 0)  {
    mysend.send(SAMSUNG, 0xE0E010EF, 32);
    oldpayload = "4";
  }

  if (payload == "16" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E020DF, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E050AF, 32);
    delay(50);
    oldpayload = "16";
  }

  if (payload == "21" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E0A05F, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E020DF, 32);
    delay(50);
    oldpayload = "21";
  }

  if (payload == "23" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E0A05F, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E0609F, 32);
    delay(50);
    oldpayload = "23";
  }

  if (payload == "35" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E0609F, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E0906F, 32);
    delay(50);
    oldpayload = "35";
  }

  if (payload == "35.2" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E0609F, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E0906F, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E0C43B, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E0A05F, 32);
    delay(50);
    oldpayload = "35.2";
  }
  
  if (payload == "36" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E0609F, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E050AF, 32);
    delay(50);
    oldpayload = "36";
  }

  if (payload == "47" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E010EF, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E030CF, 32);
    delay(50);
    oldpayload = "47";
  }

  if (payload == "56" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E0906F, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E050AF, 32);
    delay(50);
    oldpayload = "56";
  }

  if (payload == "56.2" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E0906F, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E050AF, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E0C43B, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E0A05F, 32);
    delay(50);
    oldpayload = "56.2";
  }

  if (payload == "63" && New == 0) {
    mysend.send(SAMSUNG, 0xE0E050AF, 32);
    delay(300);
    mysend.send(SAMSUNG, 0xE0E0609F, 32);
    delay(50);
    oldpayload = "63";
  }
  
 if (payload == "100" && New == 0) {  //VOLUME UP
          mysend.send(SAMSUNG, 0xE0E0E01F, 32);
          delay(300);
          mysend.send(SAMSUNG, 0xE0E0E01F, 32);
          delay(300);
          mysend.send(SAMSUNG, 0xE0E0E01F, 32);
          delay(300);
          mysend.send(SAMSUNG, 0xE0E0E01F, 32);
          delay(300);
          mysend.send(SAMSUNG, 0xE0E0E01F, 32);
          delay(50);
          oldpayload = "100";
      }
      
if (payload == "101" && New == 0) { //VOLUME DOWN
  mysend.send(SAMSUNG, 0xE0E0D02F, 32);
  delay(300);
  mysend.send(SAMSUNG, 0xE0E0D02F, 32);
  delay(300);
  mysend.send(SAMSUNG, 0xE0E0D02F, 32);
  delay(300);
  mysend.send(SAMSUNG, 0xE0E0D02F, 32);
  delay(300);
  mysend.send(SAMSUNG, 0xE0E0D02F, 32);
  delay(50);
  oldpayload = "101";
}

if (payload == "102" && New == 0) { // CHANNEL UP
  mysend.send(SAMSUNG, 0xE0E048B7, 32);
  oldpayload = "102";
}

if (payload == "103" && New == 0) { // CHANNEL DOWN
  mysend.send(SAMSUNG, 0xE0E008F7, 32);
  oldpayload = "103";
  }

if (payload == "104" && New == 0) { // MUTE
  mysend.send(SAMSUNG, 0xE0E0F00F, 32);
  oldpayload = "104";
}      
  if (payload == "105" && New == 0) {  // ON
  mysend.send(SAMSUNG, 0xE0E040BF, 32);
  oldpayload = "105";
  delay(50);
}

if (payload == "106" && New == 0) {  // OFF
      mysend.send(SAMSUNG, 0xE0E040BF, 32);
      oldpayload = "106";
      delay(50);
    }
  

if (payload == "107" && New == 0) { // MENU
  mysend.send(SAMSUNG, 0xE0E058A7, 32);
  oldpayload = "107";
}

if (payload == "108" && New == 0) { // PREVIOUS CHANNEL
  mysend.send(SAMSUNG, 0xE0E0C837, 32);
  oldpayload = "108";
}

if (payload == "109" && New == 0) { // SELECT
  mysend.send(SAMSUNG, 0xE0E016E9, 32);
  oldpayload = "109";
}

if (payload == "110" && New == 0) { //  EXIT
  mysend.send(SAMSUNG, 0xE0E0B44B, 32);
  oldpayload = "110";
}

if (payload == "111" && New == 0) { // DOWN
  mysend.send(SAMSUNG, 0xE0E08679, 32);
  oldpayload = "111";
}

if (payload == "112" && New == 0) { // UP
  mysend.send(SAMSUNG, 0xE0E006F9, 32);
  oldpayload = "112";
}

if (payload == "113" && New == 0) { // LEFT
  mysend.send(SAMSUNG, 0xE0E0A659, 32);
  oldpayload = "113";
}

if (payload == "114" && New == 0) { // RIGHT
  mysend.send(SAMSUNG, 0xE0E046B9, 32);
  oldpayload = "114";
}

if (payload == "115" && New == 0) { // UNMUTE
  mysend.send(SAMSUNG, 0xE0E0F00F, 32);
  oldpayload = "115";
}

if (payload != oldpayload && New == 1) {
    New = 0;
    goto conditions;
  }
  
  if (payload == oldpayload && New == 1) {
    Serial.println("NULL");
    delay(800);
  }

  
 delay(50);
 }

 New = 1;
  
  http.end(); 
 
    }
delay(1000);

}
